<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
            targetRuntime: 执行生成的逆向工程的版本
                    MyBatis3Simple: 生成基本的CRUD（清新简洁版）
                    MyBatis3: 生成带条件的CRUD（奢华尊享版）
         -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!--覆盖生成XML文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"/>
        <!-- 生成的实体类添加toString()方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!-- 不生成注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--  数据库的连接信息  -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/wikidev?serverTimezone=UTC" userId="root"
                        password="123456"/>
        <!--  javaBean的生成策略 -->
        <javaModelGenerator targetPackage="com.java.wiki.pojo" targetProject=".\src\main\java">
            <!-- 目录必须存在 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否使用子包 -->
            <property name="trimStrings" value="true"/>
            <!-- 去除字段前后空格 -->
        </javaModelGenerator>
        <!--  SQL映射文件的生成策略  -->
        <sqlMapGenerator targetPackage="com.java.wiki.mapper" targetProject=".\src\main\resources">
            <!-- 目录必须存在 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否使用子包 -->
        </sqlMapGenerator>
        <!--  Mapper接口的生成策略  -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.java.wiki.mapper" targetProject=".\src\main\java">
            <!-- 目录必须存在 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否使用子包 -->
        </javaClientGenerator>
        <!--  逆向分析的表  -->
        <!--  tableName设置为*号，可以对应所有表，此时不写domainObjectName  -->
        <!--  domainObjectName属性指定生成出来的实体类的类名  -->
        <!--  t_blog
                t_bookmark
                t_chat
                t_comment
                t_follow
                t_like
                t_user  -->
        <!--        <table tableName="demo" domainObjectName="DemoName"/>-->
        <!--        <table tableName="tests" domainObjectName="TestsName"/>-->
        <table tableName="ebook" domainObjectName="EbookName"/>
        <!--  <table tableName="t_dept" domainObjectName="Dept" />  -->
    </context>
</generatorConfiguration>